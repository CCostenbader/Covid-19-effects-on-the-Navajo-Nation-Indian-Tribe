# -Are there any outliers?
# -Are they high or low outliers?
# -Do these data appear to come from a
# normal distribution?
# TO ANSWER THESE QUESTIONS, COMPLETE THE
# FOLLOWING FUNCTIONS
# ACCESS THIS
library(datasets)
# the rivers data set
rivers
# create a vector of "length in miles"
# out of the 141 elements in the data set "rivers"
# assign the vector to the variable "Miles"
Miles <- c(rivers)
# build a "data.frame" of length in miles
# from the dataset "rivers"
# and assign it to the variable "rr"
rr = data.frame(rivers)
# to create a histogram
d <- ggplot(rr, aes(x = Miles))
d + geom_histogram(binwidth = 141) +
ggtitle("Histogram of Miles") +
xlab("Length in Miles") +
ylab("Number of Rivers")
# create a box plot
d <- ggplot(rr, aes(x ="", y= Miles))
d + geom_boxplot() + xlab("Number of Rivers")
# to create a "Normal Probability Plot"
ggplot(rr, aes(sample = Miles)) + geom_qq()
# TO GET A SUMMARY OF THE DATA SET "MILES"
summary(Miles)
# CONFIRM IF THERE WERE OUTLIERS
# -ANYTHING 1.5 TIMES HIGHER OR LOWER THAN THE
# VALUE OF THE IQR IS AN OUTLIER.
IQR_RIVERS <- IQR(Miles)
IQR_RIVERS
UPPER_OUTLIER <- (IQR_RIVERS * 1.5)
UPPER_OUTLIER
# CONCLUSIONS
# THERE WERE OUTLIERS
# THERE WERE UPPER OUTLIERS ONLY
# THERE WERE NO LOWER OUTLIERS
# BASED ON THE FAT PENCIL TEST,
# THE DATA FRAME DID NOT COME FROM A
# FROM A NORMAL DISTRIBUTION
library(ggplot2)
# LESSON 5 PAGE 7 HANDS-ON
# The built in data set "rivers" has the length
# in miles of 141 major rivers in North America.
# Using the dataset, create a Histogram with suitable
# bin widths, a box plot, and a normal probability
# plot.
# Then answer the following questions:
# -Are there any outliers?
# -Are they high or low outliers?
# -Do these data appear to come from a
# normal distribution?
# TO ANSWER THESE QUESTIONS, COMPLETE THE
# FOLLOWING FUNCTIONS
# ACCESS THIS
library(datasets)
# the rivers data set
rivers
# create a vector of "length in miles"
# out of the 141 elements in the data set "rivers"
# assign the vector to the variable "Miles"
Miles <- c(rivers)
# build a "data.frame" of length in miles
# from the dataset "rivers"
# and assign it to the variable "rr"
rr = data.frame(rivers)
# to create a histogram
d <- ggplot(rr, aes(x = Miles))
d + geom_histogram(binwidth = 141) +
ggtitle("Histogram of Miles") +
xlab("Length in Miles") +
ylab("Number of Rivers")
# create a box plot
d <- ggplot(rr, aes(x ="", y= Miles))
d + geom_boxplot() + xlab("Number of Rivers")
# to create a "Normal Probability Plot"
ggplot(rr, aes(sample = Miles)) + geom_qq()
# TO GET A SUMMARY OF THE DATA SET "MILES"
summary(Miles)
# CONFIRM IF THERE WERE OUTLIERS
# -ANYTHING 1.5 TIMES HIGHER OR LOWER THAN THE
# VALUE OF THE IQR IS AN OUTLIER.
IQR_RIVERS <- IQR(Miles)
IQR_RIVERS
UPPER_OUTLIER <- (IQR_RIVERS * 1.5)
UPPER_OUTLIER
# CONCLUSIONS
# THERE WERE OUTLIERS
# THERE WERE UPPER OUTLIERS ONLY
# THERE WERE NO LOWER OUTLIERS
# BASED ON THE FAT PENCIL TEST,
# THE DATA FRAME DID NOT COME FROM A
# FROM A NORMAL DISTRIBUTION
# LESSON 5 PAGE 7 HANDS-ON
# The built in data set "rivers" has the length
# in miles of 141 major rivers in North America.
# Using the dataset, create a Histogram with suitable
# bin widths, a box plot, and a normal probability
# plot.
# Then answer the following questions:
# -Are there any outliers?
# -Are they high or low outliers?
# -Do these data appear to come from a
# normal distribution?
# TO ANSWER THESE QUESTIONS, COMPLETE THE
# FOLLOWING FUNCTIONS
# ACCESS THIS
library(datasets)
# the rivers data set
rivers
# create a vector of "length in miles"
# out of the 141 elements in the data set "rivers"
# assign the vector to the variable "Miles"
Miles <- c(rivers)
# build a "data.frame" of length in miles
# from the dataset "rivers"
# and assign it to the variable "rr"
rr = data.frame(rivers)
# to create a histogram
d <- ggplot(rr, aes(x = Miles))
d + geom_histogram(binwidth = 141) +
ggtitle("Histogram of Miles") +
xlab("Length in Miles") +
ylab("Number of Rivers")
# create a box plot
d <- ggplot(rr, aes(x ="", y= Miles))
d + geom_boxplot() + xlab("Number of Rivers")
# to create a "Normal Probability Plot"
ggplot(rr, aes(sample = Miles)) + geom_qq()
# TO GET A SUMMARY OF THE DATA SET "MILES"
summary(Miles)
# CONFIRM IF THERE WERE OUTLIERS
# -ANYTHING 1.5 TIMES HIGHER OR LOWER THAN THE
# VALUE OF THE IQR IS AN OUTLIER.
IQR_RIVERS <- IQR(Miles)
IQR_RIVERS
UPPER_OUTLIER <- (IQR_RIVERS * 1.5)
UPPER_OUTLIER
# CONCLUSIONS
# THERE WERE OUTLIERS
# THERE WERE UPPER OUTLIERS ONLY
# THERE WERE NO LOWER OUTLIERS
# BASED ON THE FAT PENCIL TEST,
# THE DATA FRAME DID NOT COME FROM A
# FROM A NORMAL DISTRIBUTION
library(ggplot2)
library(ggplot2)
Snowman_name <- c("Frosty", "Frostette", "Jack Frost", "Jackie Frost", "Coal Eye")
Accessory <- c("Top Hat", "Scarf", "Coal Buttons", "Twig Arms", "Carrot Nose")
Location <- c("South Dakota", "North Dakota", "Colorado", "Minnesota", "Alaska")
Body_Sections <- c(3,4,2,3,2)
Snowmen <- data.frame(Snowman_name, Accessory, Location, Body_Sections)
head(Snowmen)
Snowman_name <- c("Frosty", "Frostette", "Jack Frost", "Jackie Frost", "Coal Eye")
Accessory <- c("Top Hat", "Scarf", "Coal Buttons", "Twig Arms", "Carrot Nose")
Location <- c("South Dakota", "North Dakota", "Colorado", "Minnesota", "Alaska")
Body_Sections <- c(3,4,2,3,2)
Snowmen <- data.frame(Snowman_name, Accessory, Location, Body_Sections)
Snowman_name <- c("Frosty", "Frostette", "Jack Frost", "Jackie Frost", "Coal Eye")
Accessory <- c("Top Hat", "Scarf", "Coal Buttons", "Twig Arms", "Carrot Nose")
Location <- c("South Dakota", "North Dakota", "Colorado", "Minnesota", "Alaska")
Body_Sections <- c(3,4,2,3,2)
Snowmen <- data.frame(Snowman_name, Accessory, Location, Body_Sections)
View(Snowmen)
head(Snowmen)
tail(Snowmen)
Snowmen
Snowmen$Accessory
Snowmen(3,2)
Snowmen(3,2)
Snowmen(3, 2)
Snowmen[3, 2]
Snowmen[3, ]
Snowmen[3, 2]
Snowmen$Gender <- c("Male", "Female", "Male", "Female", "Male")
View(Snowmen)
Snowmen[3, 2]
Name <- c("Bob", "Nancy", "Cyrus", "Jackie")
Age <- c(36, 31, 26, 34)
Dominant_Hand <- c("Right", "Right", "Left", "Right")
friends <- data.frame(Name, Age, Dominant_Hand)
View(friends)
friends
Name <- c("Bob", "Nancy", "Cyrus", "Jackie")
friends$Name
friends$Dominant_Hand
library(dplyr)
library(ggplot2)
library(ggplot2)
library(dplyr)
View(mtcars)
mtcars %>% group_by(mpg, cyl ) %>% summarize(count = n())
morley
ggplot(mtcars, aes(x = cyl, y = mpg)) + geom_boxplot(aes(group=cyl))
boxplot(mtcars$mpg ~ mtcars$cyl, data=mtcars)
ggplot(mtcars, aes(x = cyl, y = mpg)) + geom_boxplot(aes(group=cyl))
View(mtcars)
View(mtcars)
mtcars
ggplot(mtcars, aes(x = cyl, y = mpg)) + geom_boxplot(aes(group=cyl))
# LESSON 6 PAGE 13 HANDS ON
# REQUIREMENTS
# From the mtcars data frame,
# create a box plot of miles per gallon
# (the mpg variable) grouped by the number of cylinders
# in the engine (the cyl variable).
# Do these box plots make sense?
# Also, use the summarize() and group_by()
# functions to compute how many cars have four cylinders,
# how many have six, and how many have eight.
# Prepare a report (using MS Power Point or similar)
# with all of these elements and any code used to
# arrive at the results.
# VIEW LIBRARY ggplot2
library(ggplot2)
# VIEW LIBRARY dplyr
library(dplyr)
# USE THE DATA FRAME mtcars
View(mtcars)
mtcars
# CREATE A BOX PLOT, FOR THE DATA FRAME mtcars SHOWING MILES PER GALLON
# GROUPED BY THE NUMBER OF CYLINDERS IN THE ENGINE
ggplot(mtcars, aes(x = cyl, y = mpg)) + geom_boxplot(aes(group=cyl))
mtcars %>% group_by(cyl) %>% summarize(cyl = n())
mtcars %>% group_by(cyl) %>% summarize(count = n())
# LESSON 6 PAGE 13 HANDS ON
# REQUIREMENTS
# From the mtcars data frame,
# create a box plot of miles per gallon
# (the mpg variable) grouped by the number of cylinders
# in the engine (the cyl variable).
# Do these box plots make sense?
# Also, use the summarize() and group_by()
# functions to compute how many cars have four cylinders,
# how many have six, and how many have eight.
# Prepare a report (using MS Power Point or similar)
# with all of these elements and any code used to
# arrive at the results.
# USING LIBRARY ggplot2
library(ggplot2)
# USING LIBRARY dplyr
library(dplyr)
# USING DATA FRAME mtcars
View(mtcars)
# TO SHOW "mtcars" in the CONSOLE
mtcars
# THEN CREATE A BOX PLOT, FOR THE DATA FRAME mtcars SHOWING MILES PER GALLON
# GROUPED BY THE NUMBER OF CYLINDERS IN THE ENGINE (SEE PLOTS PANE)
ggplot(mtcars, aes(x = cyl, y = mpg)) + geom_boxplot(aes(group=cyl))
# TO COMPUTE THE NUMBER OF EACH TYPE OF MOTOR TESTED US THIS FORMULA
mtcars %>% group_by(cyl) %>% summarize(count = n())
# LESSON 6 PAGE 13 HANDS ON
# REQUIREMENTS
# From the mtcars data frame,
# create a box plot of miles per gallon
# (the mpg variable) grouped by the number of cylinders
# in the engine (the cyl variable).
# Do these box plots make sense?
# Also, use the summarize() and group_by()
# functions to compute how many cars have four cylinders,
# how many have six, and how many have eight.
# Prepare a report (using MS Power Point or similar)
# with all of these elements and any code used to
# arrive at the results.
# USING LIBRARY ggplot2
library(ggplot2)
# USING LIBRARY dplyr
library(dplyr)
# USING DATA FRAME mtcars
View(mtcars)
# TO SHOW "mtcars" in the CONSOLE
mtcars
# THEN CREATE A BOX PLOT, FOR THE DATA FRAME mtcars SHOWING MILES PER GALLON
# GROUPED BY THE NUMBER OF CYLINDERS IN THE ENGINE (SEE PLOTS PANE)
ggplot(mtcars, aes(x = cyl, y = mpg)) + geom_boxplot(aes(group=cyl))
# TO COMPUTE THE NUMBER OF EACH TYPE OF MOTOR TESTED US THIS FORMULA
mtcars %>% group_by(cyl) %>% summarize(count = n())
iew(EmployeeAttrition)
library(dplyr)
library(ggplot2)
View(EmployeeAttrition)
View(nhtemp)
nhtemp
first25 <- nhtemp[1:25]
last25 <- nhtemp[36:60]
View(LakeHuron)
library(dplyr)
library(ggplot2)
library(dplyr)
View(LakeHuron)
head(LakeHuron)
install.packages("ggplot2")
install.packages("dplyr")
library(dplyr)
detach("package:dplyr", unload = TRUE)
library(ggplot2)
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point()
View(faithful_histogram)
View(faithful)
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point()
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point() + ggtitle("Old Faithful Eruption vs Waiting Times") +
xlab("Eruption Time (min)") + ylab("Wating Time (min)")
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point() + + geom_smooth(method=lm) + ggtitle("Old Faithful Eruption vs Waiting Times") +
xlab("Eruption Time (min)") + ylab("Wating Time (min)")
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point() + ggtitle("Old Faithful Eruption vs Waiting Times") +
xlab("Eruption Time (min)") + ylab("Wating Time (min)")
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point() + geom_smooth(method=lm) + ggtitle("Old Faithful Eruption vs Waiting Times") +
xlab("Eruption Time (min)") + ylab("Wating Time (min)")
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point() + geom_smooth(method=lm, se=FALSE) + ggtitle("Old Faithful Eruption vs Waiting Times") +
xlab("Eruption Time (min)") + ylab("Wating Time (min)")
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point() + geom_smooth(method=lm, se=FALSE, color = "goldenrod2") + ggtitle("Old Faithful Eruption vs Waiting Times") +
xlab("Eruption Time (min)") + ylab("Wating Time (min)")
View(USArrests)
d <- ggplot(USArrests, aes(x = UrbanPop, y = Murder))
d + geom_point() + geom_smooth(method=lm, se=FALSE)
View(mtcars)
d <- ggplot(mtcars, aes(x = disp, y = mpg))
d + geom_point() + geom_smooth(method=lm, se=FALSE)
lin_reg <- lm(dist ~ speed, cars)
print(lin_reg)
summary(lin_reg)
library(dplyr)
library(tidyr)
install.packages("tidyr")
library(tidyr)
library(readxl)
babies <- read_excel("C:/Users/Craig/Dropbox/PERSONAL/SCHOOL/WOZ U/COURSE WORK/DSO104C/LESSON 1/babies/babies.xlsx")
View(babies)
library(readxl)
babies2 <- read_excel("C:/Users/Craig/Dropbox/PERSONAL/SCHOOL/WOZ U/COURSE WORK/DSO104C/LESSON 1/babies/babies2.xlsx")
View(babies2)
View(babies2)
View(babies)
View(babies2)
View(babies2)
babies2 <- read.csv("C:/Users/Craig/Dropbox/PERSONAL/SCHOOL/WOZ U/COURSE WORK/DSO104C/LESSON 1/babies/babies2.xlsx", sep="")
View(babies2)
View(babies2)
babies2 <- read.csv("C:/Users/Craig/Dropbox/PERSONAL/SCHOOL/WOZ U/COURSE WORK/DSO104C/LESSON 1/babies/babies2.csv")
View(babies2)
View(babies2)
View(babies2)
babies2$Footprint = " "
library(dplyr)
library(tidyr)
babies2 <- read.csv("C:/Users/Craig/Dropbox/PERSONAL/SCHOOL/WOZ U/COURSE WORK/DSO104C/LESSON 1/babies in R/babies2.xlsx", sep="")
View(babies2)
babies2 <- read.csv("C:/Users/Craig/Dropbox/PERSONAL/SCHOOL/WOZ U/COURSE WORK/DSO104C/LESSON 1/babies in R/babies2.csv")
View(babies2)
babies$Footprint = " "
babies2$Footprint = " "
View(babies2)
wd()
prop.test(x = 15, n = 43,
alternative = "less",
correction=FALSE)
prop.test(x = 15, n = 43, alternative = "less", correction=FALSE)
prop.test(x = 15, n = 43, alternative = "less")
prop.test(x = 15, n = 43, alternative = "less", correction=FALSE)
prop.test(x = 15, n = 43, alternative = "less")
setwd("C:/Users/Craig/Dropbox/SCHOOL/WOZ U/COURSE WORK/DSO110/FINAL GROUP PROJECT/SCHOOL-GROUP-FINAL/Final")
# IMPORT LIBRARIES
library("rcompanion")
library("car")
library("fastR2")
library("IDPmisc")
# IMPORT DATA SET
CovidDataSet <- read.csv("CovidDataSet.csv")
covid2 <- filter(CovidDataSet, FIPS %in% c(4001, 4003, 4005, 4007, 4009, 4011, 4012, 4013, 4015, 4017, 4019, 4021, 4023, 4025,4027,35001, 35003, 35005, 35006, 35007, 35009, 35011, 35013, 35015, 35017, 35019, 35021, 35023, 35025, 35027, 35028, 35029, 35031, 35033, 35035, 35037, 35039, 35041, 35045, 35047, 35043, 35049, 35051, 35053, 35055, 35057, 35059, 35061))
covidtest2 <- select(covid2, FIPS, Lat, Long_, Confirmed, Deaths, Active)
## Navajo = 1
covidtest$NavajoR[covidtest$FIPS== 4001] <- 1
covidtest$NavajoR[covidtest$FIPS== 4005] <- 1
covidtest$NavajoR[covidtest$FIPS== 4017] <- 1
covidtest$NavajoR[covidtest$FIPS== 35031] <- 1
covidtest$NavajoR[covidtest$FIPS== 35045] <- 1
covidtest$NavajoR <- NA
# Recode with Navajo binary
covidtest$NavajoR <- NA
View(covidtest2)
View(covidtest2)
covidtest$NavajoR <- NA
covid2 <- filter(CovidDataSet, FIPS %in% c(4001, 4003, 4005, 4007, 4009, 4011, 4012, 4013, 4015, 4017, 4019, 4021, 4023, 4025,4027,35001, 35003, 35005, 35006, 35007, 35009, 35011, 35013, 35015, 35017, 35019, 35021, 35023, 35025, 35027, 35028, 35029, 35031, 35033, 35035, 35037, 35039, 35041, 35045, 35047, 35043, 35049, 35051, 35053, 35055, 35057, 35059, 35061))
covidtest2 <- select(covid2, FIPS, Lat, Long_, Confirmed, Deaths, Active)
covidtest2$NavajoR <- NA
## Navajo = 1
covidtest2$NavajoR[covidtest2$FIPS== 4001] <- 1
covidtest2$NavajoR[covidtest2$FIPS== 4005] <- 1
covidtest2$NavajoR[covidtest2$FIPS== 4017] <- 1
covidtest2$NavajoR[covidtest2$FIPS== 35031] <- 1
covidtest2$NavajoR[covidtest2$FIPS== 35045] <- 1
## Non-Navajo = 0
covidtest2$NavajoR[covidtest2$FIPS== 4003] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 40012] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 4007] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35006] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35001] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 4012] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 4013] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 4015] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 4019] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 4021] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 4023] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 4025] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 4027] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35029] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35003] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35028] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35033] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35035] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35013] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35011] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35009] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35039] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35007] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35028] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35017] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35027] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35025] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35015] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35019] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35021] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35037] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35047] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35043] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35049] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35051] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35053] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35055] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35057] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 90035] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35059] <- 0
covidtest2$NavajoR[covidtest2$FIPS== 35061] <- 0
## NAs left off question if NN
covidtest2$NavajoR[covidtest2$FIPS== 4009] <- 0 # Graham, AZ
covidtest2$NavajoR[covidtest2$FIPS== 4011] <- 0 # Greenlee, AZ
covidtest2$NavajoR[covidtest2$FIPS== 35005] <- 0 # Chaves, NM
covidtest2$NavajoR[covidtest2$FIPS== 35023] <- 0 # Hidalgo, NM
covidtest2$NavajoR[covidtest2$FIPS== 35041] <- 0 # Roosevelt, NM
covidtest3 <- select(covidtest2, Lat, Long_, Confirmed, Deaths, Active, NavajoR)
View(covidtest3)
### ANOVA for Confirmed Cases
##Assumptions
#Normality
plotNormalHistogram(covidtest3$Confirmed)
covidtest2$ConfirmedLOG <- log(covidtest3$Confirmed)
plotNormalHistogram(covidtest3$ConfirmedLOG)
#Log is Good
#Normality
plotNormalHistogram(covidtest3$Confirmed)
covidtest3$ConfirmedLOG <- log(covidtest3$Confirmed)
plotNormalHistogram(covidtest3$ConfirmedLOG)
#Log is Good
# Homogeneity of Variance
bartlett.test(covidtest3$ConfirmedLOG ~ NavajoR, data= covidtest3)
# Assumption not met
## Welch's One-Way Test
ANOVA <- lm(ConfirmedLOG ~ NavajoR, data=covidtest3)
Anova(ANOVA, Type="II", white.adjust=TRUE)
# Significant difference between two IVs
View(ANOVA)
## Bonferroni Adj
pairwise.t.test(covidtest3$ConfirmedLOG, covidtest3$NavajoR, p.adjust="bonferroni", pool.sd = FALSE)
# Significant difference in Confirmed Cases between Navajo / Non-Navajo counties
# Means & conclusions
ConfirmedMeans <- covidtest3 %>% group_by(NavajoR) %>% summarize(Mean = mean(Confirmed))
## Significant difference between Navajo & Non-Navajo Counties, on average confirmed cases in the Non-Navajo counties is 7608 more than that of the Navajo Nation counties
View(ConfirmedMeans)
# Means & conclusions
ConfirmedMeans <- covidtest3 %>% group_by(NavajoR) %>%
summarize(Mean = mean(Confirmed))
## There is a Significant difference between Navajo & Non-Navajo
## Counties, on average confirmed cases in the Non-Navajo counties
## is 7608 more than that of the Navajo Nation counties
### ANOVA for Deaths
## Assumptions
# Normality
plotNormalHistogram(covidtest3$Deaths)
covidtest3$DeathsLOG <- log(covidtest3$Deaths)
# Drop NAs
covidtest4 <-NaRV.omit(covidtest3)
plotNormalHistogram(covidtest4$DeathsLOG)
# Log is good
# Homogeneity of Variance
bartlett.test(covidtest4$DeathsLOG ~ NavajoR, data= covidtest4)
# Assumptions Not Met
## Welch's One-Way Test
ANOVA2 <- lm(DeathsLOG ~ NavajoR, data=covidtest4)
Anova(ANOVA2, Type="II", white.adjust=TRUE)
# Significant Difference Between 2 IVs
## Post-Hoc
# Bonferroni Adj
pairwise.t.test(covidtest4$DeathsLOG, covidtest4$NavajoR, p.adjust="bonferroni", pool.sd = FALSE)
# Significant difference in Deaths between Navajo / Non-Navajo counties
# Means & Conclusions
DeathsMeans <- covidtest4 %>% group_by(NavajoR) %>%
summarize(Mean = mean(Deaths))
## On Average 3 more deaths in Non-Navajo Counties
View(DeathsMeans)

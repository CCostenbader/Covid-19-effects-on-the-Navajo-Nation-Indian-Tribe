Miles <- c(rivers)
# build a "data.frame" of length in miles
# from the dataset "rivers"
# and assign it to the variable "rr"
rr = data.frame(rivers)
# to create a histogram
d <- ggplot(rr, aes(x = Miles))
d + geom_histogram(binwidth = 141) +
ggtitle("Histogram of Miles") +
xlab("Length in Miles") +
ylab("Number of Rivers")
# create a box plot
d <- ggplot(rr, aes(x ="", y= Miles))
d + geom_boxplot() + xlab("Number of Rivers")
# to create a "Normal Probability Plot"
ggplot(rr, aes(sample = Miles)) + geom_qq()
# TO GET A SUMMARY OF THE DATA SET "MILES"
summary(Miles)
# CONFIRM IF THERE WERE OUTLIERS
# -ANYTHING 1.5 TIMES HIGHER OR LOWER THAN THE
# VALUE OF THE IQR IS AN OUTLIER.
IQR_RIVERS <- IQR(Miles)
IQR_RIVERS
UPPER_OUTLIER <- (IQR_RIVERS * 1.5)
UPPER_OUTLIER
# CONCLUSIONS
# THERE WERE UPPER OUTLIERS AND,
# THERE WERE NO LOWER OUTLIERS
# LESSON 5 PAGE 7 HANDS-ON
# The built in data set "rivers" has the length
# in miles of 141 major rivers in North America.
# Using the dataset, create a Histogram with suitable
# bin widths, a box plot, and a normal probability
# plot.
# Then answer the following questions:
# -Are there any outliers?
# -Are they high or low outliers?
# -Do these data appear to come from a
# normal distribution?
# TO ANSWER THESE QUESTIONS, COMPLETE THE
# FOLLOWING FUNCTIONS
# ACCESS THIS
library(datasets)
# the rivers data set
rivers
# create a vector of "length in miles"
# out of the 141 elements in the data set "rivers"
# assign the vector to the variable "Miles"
Miles <- c(rivers)
# build a "data.frame" of length in miles
# from the dataset "rivers"
# and assign it to the variable "rr"
rr = data.frame(rivers)
# to create a histogram
d <- ggplot(rr, aes(x = Miles))
d + geom_histogram(binwidth = 141) +
ggtitle("Histogram of Miles") +
xlab("Length in Miles") +
ylab("Number of Rivers")
# create a box plot
d <- ggplot(rr, aes(x ="", y= Miles))
d + geom_boxplot() + xlab("Number of Rivers")
# to create a "Normal Probability Plot"
ggplot(rr, aes(sample = Miles)) + geom_qq()
# TO GET A SUMMARY OF THE DATA SET "MILES"
summary(Miles)
# CONFIRM IF THERE WERE OUTLIERS
# -ANYTHING 1.5 TIMES HIGHER OR LOWER THAN THE
# VALUE OF THE IQR IS AN OUTLIER.
IQR_RIVERS <- IQR(Miles)
IQR_RIVERS
UPPER_OUTLIER <- (IQR_RIVERS * 1.5)
UPPER_OUTLIER
# CONCLUSIONS
# THERE WERE OUTLIERS
# THERE WERE UPPER OUTLIERS ONLY, WITH NO LOWER
# BASED ON THE FAT PENCIL TEST,
# THE DATA FRAME DID NOT COME FROM A
# NOT COME FROM A NORMAL DISTRIBUTION
# LESSON 5 PAGE 7 HANDS-ON
# The built in data set "rivers" has the length
# in miles of 141 major rivers in North America.
# Using the dataset, create a Histogram with suitable
# bin widths, a box plot, and a normal probability
# plot.
# Then answer the following questions:
# -Are there any outliers?
# -Are they high or low outliers?
# -Do these data appear to come from a
# normal distribution?
# TO ANSWER THESE QUESTIONS, COMPLETE THE
# FOLLOWING FUNCTIONS
# ACCESS THIS
library(datasets)
# the rivers data set
rivers
# create a vector of "length in miles"
# out of the 141 elements in the data set "rivers"
# assign the vector to the variable "Miles"
Miles <- c(rivers)
# build a "data.frame" of length in miles
# from the dataset "rivers"
# and assign it to the variable "rr"
rr = data.frame(rivers)
# to create a histogram
d <- ggplot(rr, aes(x = Miles))
d + geom_histogram(binwidth = 141) +
ggtitle("Histogram of Miles") +
xlab("Length in Miles") +
ylab("Number of Rivers")
# create a box plot
d <- ggplot(rr, aes(x ="", y= Miles))
d + geom_boxplot() + xlab("Number of Rivers")
# to create a "Normal Probability Plot"
ggplot(rr, aes(sample = Miles)) + geom_qq()
# TO GET A SUMMARY OF THE DATA SET "MILES"
summary(Miles)
# CONFIRM IF THERE WERE OUTLIERS
# -ANYTHING 1.5 TIMES HIGHER OR LOWER THAN THE
# VALUE OF THE IQR IS AN OUTLIER.
IQR_RIVERS <- IQR(Miles)
IQR_RIVERS
UPPER_OUTLIER <- (IQR_RIVERS * 1.5)
UPPER_OUTLIER
# CONCLUSIONS
# THERE WERE OUTLIERS
# THERE WERE UPPER OUTLIERS ONLY
# THERE WERE NO LOWER OUTLIERS
# BASED ON THE FAT PENCIL TEST,
# THE DATA FRAME DID NOT COME FROM A
# FROM A NORMAL DISTRIBUTION
# LESSON 5 PAGE 7 HANDS-ON
# The built in data set "rivers" has the length
# in miles of 141 major rivers in North America.
# Using the dataset, create a Histogram with suitable
# bin widths, a box plot, and a normal probability
# plot.
# Then answer the following questions:
# -Are there any outliers?
# -Are they high or low outliers?
# -Do these data appear to come from a
# normal distribution?
# TO ANSWER THESE QUESTIONS, COMPLETE THE
# FOLLOWING FUNCTIONS
# ACCESS THIS
library(datasets)
# the rivers data set
rivers
# create a vector of "length in miles"
# out of the 141 elements in the data set "rivers"
# assign the vector to the variable "Miles"
Miles <- c(rivers)
# build a "data.frame" of length in miles
# from the dataset "rivers"
# and assign it to the variable "rr"
rr = data.frame(rivers)
# to create a histogram
d <- ggplot(rr, aes(x = Miles))
d + geom_histogram(binwidth = 141) +
ggtitle("Histogram of Miles") +
xlab("Length in Miles") +
ylab("Number of Rivers")
# create a box plot
d <- ggplot(rr, aes(x ="", y= Miles))
d + geom_boxplot() + xlab("Number of Rivers")
# to create a "Normal Probability Plot"
ggplot(rr, aes(sample = Miles)) + geom_qq()
# TO GET A SUMMARY OF THE DATA SET "MILES"
summary(Miles)
# CONFIRM IF THERE WERE OUTLIERS
# -ANYTHING 1.5 TIMES HIGHER OR LOWER THAN THE
# VALUE OF THE IQR IS AN OUTLIER.
IQR_RIVERS <- IQR(Miles)
IQR_RIVERS
UPPER_OUTLIER <- (IQR_RIVERS * 1.5)
UPPER_OUTLIER
# CONCLUSIONS
# THERE WERE OUTLIERS
# THERE WERE UPPER OUTLIERS ONLY
# THERE WERE NO LOWER OUTLIERS
# BASED ON THE FAT PENCIL TEST,
# THE DATA FRAME DID NOT COME FROM A
# FROM A NORMAL DISTRIBUTION
library(ggplot2)
# LESSON 5 PAGE 7 HANDS-ON
# The built in data set "rivers" has the length
# in miles of 141 major rivers in North America.
# Using the dataset, create a Histogram with suitable
# bin widths, a box plot, and a normal probability
# plot.
# Then answer the following questions:
# -Are there any outliers?
# -Are they high or low outliers?
# -Do these data appear to come from a
# normal distribution?
# TO ANSWER THESE QUESTIONS, COMPLETE THE
# FOLLOWING FUNCTIONS
# ACCESS THIS
library(datasets)
# the rivers data set
rivers
# create a vector of "length in miles"
# out of the 141 elements in the data set "rivers"
# assign the vector to the variable "Miles"
Miles <- c(rivers)
# build a "data.frame" of length in miles
# from the dataset "rivers"
# and assign it to the variable "rr"
rr = data.frame(rivers)
# to create a histogram
d <- ggplot(rr, aes(x = Miles))
d + geom_histogram(binwidth = 141) +
ggtitle("Histogram of Miles") +
xlab("Length in Miles") +
ylab("Number of Rivers")
# create a box plot
d <- ggplot(rr, aes(x ="", y= Miles))
d + geom_boxplot() + xlab("Number of Rivers")
# to create a "Normal Probability Plot"
ggplot(rr, aes(sample = Miles)) + geom_qq()
# TO GET A SUMMARY OF THE DATA SET "MILES"
summary(Miles)
# CONFIRM IF THERE WERE OUTLIERS
# -ANYTHING 1.5 TIMES HIGHER OR LOWER THAN THE
# VALUE OF THE IQR IS AN OUTLIER.
IQR_RIVERS <- IQR(Miles)
IQR_RIVERS
UPPER_OUTLIER <- (IQR_RIVERS * 1.5)
UPPER_OUTLIER
# CONCLUSIONS
# THERE WERE OUTLIERS
# THERE WERE UPPER OUTLIERS ONLY
# THERE WERE NO LOWER OUTLIERS
# BASED ON THE FAT PENCIL TEST,
# THE DATA FRAME DID NOT COME FROM A
# FROM A NORMAL DISTRIBUTION
# LESSON 5 PAGE 7 HANDS-ON
# The built in data set "rivers" has the length
# in miles of 141 major rivers in North America.
# Using the dataset, create a Histogram with suitable
# bin widths, a box plot, and a normal probability
# plot.
# Then answer the following questions:
# -Are there any outliers?
# -Are they high or low outliers?
# -Do these data appear to come from a
# normal distribution?
# TO ANSWER THESE QUESTIONS, COMPLETE THE
# FOLLOWING FUNCTIONS
# ACCESS THIS
library(datasets)
# the rivers data set
rivers
# create a vector of "length in miles"
# out of the 141 elements in the data set "rivers"
# assign the vector to the variable "Miles"
Miles <- c(rivers)
# build a "data.frame" of length in miles
# from the dataset "rivers"
# and assign it to the variable "rr"
rr = data.frame(rivers)
# to create a histogram
d <- ggplot(rr, aes(x = Miles))
d + geom_histogram(binwidth = 141) +
ggtitle("Histogram of Miles") +
xlab("Length in Miles") +
ylab("Number of Rivers")
# create a box plot
d <- ggplot(rr, aes(x ="", y= Miles))
d + geom_boxplot() + xlab("Number of Rivers")
# to create a "Normal Probability Plot"
ggplot(rr, aes(sample = Miles)) + geom_qq()
# TO GET A SUMMARY OF THE DATA SET "MILES"
summary(Miles)
# CONFIRM IF THERE WERE OUTLIERS
# -ANYTHING 1.5 TIMES HIGHER OR LOWER THAN THE
# VALUE OF THE IQR IS AN OUTLIER.
IQR_RIVERS <- IQR(Miles)
IQR_RIVERS
UPPER_OUTLIER <- (IQR_RIVERS * 1.5)
UPPER_OUTLIER
# CONCLUSIONS
# THERE WERE OUTLIERS
# THERE WERE UPPER OUTLIERS ONLY
# THERE WERE NO LOWER OUTLIERS
# BASED ON THE FAT PENCIL TEST,
# THE DATA FRAME DID NOT COME FROM A
# FROM A NORMAL DISTRIBUTION
library(ggplot2)
library(ggplot2)
Snowman_name <- c("Frosty", "Frostette", "Jack Frost", "Jackie Frost", "Coal Eye")
Accessory <- c("Top Hat", "Scarf", "Coal Buttons", "Twig Arms", "Carrot Nose")
Location <- c("South Dakota", "North Dakota", "Colorado", "Minnesota", "Alaska")
Body_Sections <- c(3,4,2,3,2)
Snowmen <- data.frame(Snowman_name, Accessory, Location, Body_Sections)
head(Snowmen)
Snowman_name <- c("Frosty", "Frostette", "Jack Frost", "Jackie Frost", "Coal Eye")
Accessory <- c("Top Hat", "Scarf", "Coal Buttons", "Twig Arms", "Carrot Nose")
Location <- c("South Dakota", "North Dakota", "Colorado", "Minnesota", "Alaska")
Body_Sections <- c(3,4,2,3,2)
Snowmen <- data.frame(Snowman_name, Accessory, Location, Body_Sections)
Snowman_name <- c("Frosty", "Frostette", "Jack Frost", "Jackie Frost", "Coal Eye")
Accessory <- c("Top Hat", "Scarf", "Coal Buttons", "Twig Arms", "Carrot Nose")
Location <- c("South Dakota", "North Dakota", "Colorado", "Minnesota", "Alaska")
Body_Sections <- c(3,4,2,3,2)
Snowmen <- data.frame(Snowman_name, Accessory, Location, Body_Sections)
View(Snowmen)
head(Snowmen)
tail(Snowmen)
Snowmen
Snowmen$Accessory
Snowmen(3,2)
Snowmen(3,2)
Snowmen(3, 2)
Snowmen[3, 2]
Snowmen[3, ]
Snowmen[3, 2]
Snowmen$Gender <- c("Male", "Female", "Male", "Female", "Male")
View(Snowmen)
Snowmen[3, 2]
Name <- c("Bob", "Nancy", "Cyrus", "Jackie")
Age <- c(36, 31, 26, 34)
Dominant_Hand <- c("Right", "Right", "Left", "Right")
friends <- data.frame(Name, Age, Dominant_Hand)
View(friends)
friends
Name <- c("Bob", "Nancy", "Cyrus", "Jackie")
friends$Name
friends$Dominant_Hand
library(dplyr)
library(ggplot2)
library(ggplot2)
library(dplyr)
View(mtcars)
mtcars %>% group_by(mpg, cyl ) %>% summarize(count = n())
morley
ggplot(mtcars, aes(x = cyl, y = mpg)) + geom_boxplot(aes(group=cyl))
boxplot(mtcars$mpg ~ mtcars$cyl, data=mtcars)
ggplot(mtcars, aes(x = cyl, y = mpg)) + geom_boxplot(aes(group=cyl))
View(mtcars)
View(mtcars)
mtcars
ggplot(mtcars, aes(x = cyl, y = mpg)) + geom_boxplot(aes(group=cyl))
# LESSON 6 PAGE 13 HANDS ON
# REQUIREMENTS
# From the mtcars data frame,
# create a box plot of miles per gallon
# (the mpg variable) grouped by the number of cylinders
# in the engine (the cyl variable).
# Do these box plots make sense?
# Also, use the summarize() and group_by()
# functions to compute how many cars have four cylinders,
# how many have six, and how many have eight.
# Prepare a report (using MS Power Point or similar)
# with all of these elements and any code used to
# arrive at the results.
# VIEW LIBRARY ggplot2
library(ggplot2)
# VIEW LIBRARY dplyr
library(dplyr)
# USE THE DATA FRAME mtcars
View(mtcars)
mtcars
# CREATE A BOX PLOT, FOR THE DATA FRAME mtcars SHOWING MILES PER GALLON
# GROUPED BY THE NUMBER OF CYLINDERS IN THE ENGINE
ggplot(mtcars, aes(x = cyl, y = mpg)) + geom_boxplot(aes(group=cyl))
mtcars %>% group_by(cyl) %>% summarize(cyl = n())
mtcars %>% group_by(cyl) %>% summarize(count = n())
# LESSON 6 PAGE 13 HANDS ON
# REQUIREMENTS
# From the mtcars data frame,
# create a box plot of miles per gallon
# (the mpg variable) grouped by the number of cylinders
# in the engine (the cyl variable).
# Do these box plots make sense?
# Also, use the summarize() and group_by()
# functions to compute how many cars have four cylinders,
# how many have six, and how many have eight.
# Prepare a report (using MS Power Point or similar)
# with all of these elements and any code used to
# arrive at the results.
# USING LIBRARY ggplot2
library(ggplot2)
# USING LIBRARY dplyr
library(dplyr)
# USING DATA FRAME mtcars
View(mtcars)
# TO SHOW "mtcars" in the CONSOLE
mtcars
# THEN CREATE A BOX PLOT, FOR THE DATA FRAME mtcars SHOWING MILES PER GALLON
# GROUPED BY THE NUMBER OF CYLINDERS IN THE ENGINE (SEE PLOTS PANE)
ggplot(mtcars, aes(x = cyl, y = mpg)) + geom_boxplot(aes(group=cyl))
# TO COMPUTE THE NUMBER OF EACH TYPE OF MOTOR TESTED US THIS FORMULA
mtcars %>% group_by(cyl) %>% summarize(count = n())
# LESSON 6 PAGE 13 HANDS ON
# REQUIREMENTS
# From the mtcars data frame,
# create a box plot of miles per gallon
# (the mpg variable) grouped by the number of cylinders
# in the engine (the cyl variable).
# Do these box plots make sense?
# Also, use the summarize() and group_by()
# functions to compute how many cars have four cylinders,
# how many have six, and how many have eight.
# Prepare a report (using MS Power Point or similar)
# with all of these elements and any code used to
# arrive at the results.
# USING LIBRARY ggplot2
library(ggplot2)
# USING LIBRARY dplyr
library(dplyr)
# USING DATA FRAME mtcars
View(mtcars)
# TO SHOW "mtcars" in the CONSOLE
mtcars
# THEN CREATE A BOX PLOT, FOR THE DATA FRAME mtcars SHOWING MILES PER GALLON
# GROUPED BY THE NUMBER OF CYLINDERS IN THE ENGINE (SEE PLOTS PANE)
ggplot(mtcars, aes(x = cyl, y = mpg)) + geom_boxplot(aes(group=cyl))
# TO COMPUTE THE NUMBER OF EACH TYPE OF MOTOR TESTED US THIS FORMULA
mtcars %>% group_by(cyl) %>% summarize(count = n())
iew(EmployeeAttrition)
library(dplyr)
library(ggplot2)
View(EmployeeAttrition)
View(nhtemp)
nhtemp
first25 <- nhtemp[1:25]
last25 <- nhtemp[36:60]
View(LakeHuron)
library(dplyr)
library(ggplot2)
library(dplyr)
View(LakeHuron)
head(LakeHuron)
install.packages("ggplot2")
install.packages("dplyr")
library(dplyr)
detach("package:dplyr", unload = TRUE)
library(ggplot2)
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point()
View(faithful_histogram)
View(faithful)
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point()
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point() + ggtitle("Old Faithful Eruption vs Waiting Times") +
xlab("Eruption Time (min)") + ylab("Wating Time (min)")
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point() + + geom_smooth(method=lm) + ggtitle("Old Faithful Eruption vs Waiting Times") +
xlab("Eruption Time (min)") + ylab("Wating Time (min)")
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point() + ggtitle("Old Faithful Eruption vs Waiting Times") +
xlab("Eruption Time (min)") + ylab("Wating Time (min)")
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point() + geom_smooth(method=lm) + ggtitle("Old Faithful Eruption vs Waiting Times") +
xlab("Eruption Time (min)") + ylab("Wating Time (min)")
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point() + geom_smooth(method=lm, se=FALSE) + ggtitle("Old Faithful Eruption vs Waiting Times") +
xlab("Eruption Time (min)") + ylab("Wating Time (min)")
d <- ggplot(faithful, aes(x = eruptions, y = waiting))
d + geom_point() + geom_smooth(method=lm, se=FALSE, color = "goldenrod2") + ggtitle("Old Faithful Eruption vs Waiting Times") +
xlab("Eruption Time (min)") + ylab("Wating Time (min)")
View(USArrests)
d <- ggplot(USArrests, aes(x = UrbanPop, y = Murder))
d + geom_point() + geom_smooth(method=lm, se=FALSE)
View(mtcars)
d <- ggplot(mtcars, aes(x = disp, y = mpg))
d + geom_point() + geom_smooth(method=lm, se=FALSE)
lin_reg <- lm(dist ~ speed, cars)
print(lin_reg)
summary(lin_reg)
library(dplyr)
library(tidyr)
install.packages("tidyr")
library(tidyr)
library(readxl)
babies <- read_excel("C:/Users/Craig/Dropbox/PERSONAL/SCHOOL/WOZ U/COURSE WORK/DSO104C/LESSON 1/babies/babies.xlsx")
View(babies)
library(readxl)
babies2 <- read_excel("C:/Users/Craig/Dropbox/PERSONAL/SCHOOL/WOZ U/COURSE WORK/DSO104C/LESSON 1/babies/babies2.xlsx")
View(babies2)
View(babies2)
View(babies)
View(babies2)
View(babies2)
babies2 <- read.csv("C:/Users/Craig/Dropbox/PERSONAL/SCHOOL/WOZ U/COURSE WORK/DSO104C/LESSON 1/babies/babies2.xlsx", sep="")
View(babies2)
View(babies2)
babies2 <- read.csv("C:/Users/Craig/Dropbox/PERSONAL/SCHOOL/WOZ U/COURSE WORK/DSO104C/LESSON 1/babies/babies2.csv")
View(babies2)
View(babies2)
View(babies2)
babies2$Footprint = " "
library(dplyr)
library(tidyr)
babies2 <- read.csv("C:/Users/Craig/Dropbox/PERSONAL/SCHOOL/WOZ U/COURSE WORK/DSO104C/LESSON 1/babies in R/babies2.xlsx", sep="")
View(babies2)
babies2 <- read.csv("C:/Users/Craig/Dropbox/PERSONAL/SCHOOL/WOZ U/COURSE WORK/DSO104C/LESSON 1/babies in R/babies2.csv")
View(babies2)
babies$Footprint = " "
babies2$Footprint = " "
View(babies2)
wd()
prop.test(x = 15, n = 43,
alternative = "less",
correction=FALSE)
prop.test(x = 15, n = 43, alternative = "less", correction=FALSE)
prop.test(x = 15, n = 43, alternative = "less")
prop.test(x = 15, n = 43, alternative = "less", correction=FALSE)
prop.test(x = 15, n = 43, alternative = "less")
setwd("C:/Users/Craig/Dropbox/PERSONAL/SCHOOL/WOZ U/COURSE WORK/DSO110/FINAL GROUP PROJECT/SCHOOL-GROUP-FINAL/Final")
